version: '3'

services:
  snippet-service:
    container_name: "snippet-service-infra"
    image: ghcr.io/ing-sistemas/snippet-service:latest
    ports:
      - "8081:8081"
    env_file:
        - .env

  #snippet-db:
  #  container_name: "snippet-db-infra"
  #  image: postgres:12
  #  ports:
  #    - "5433:5433"
  #  env_file:
  #      - .env
  #  environment:
  #    POSTGRES_DB: ${POSTGRES_DB_SNIPPET}
  #    POSTGRES_USER: ${POSTGRES_USER}
  #    POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
  #  volumes:
  #    - pgdata:/var/lib/postgresql/data

  permission-service:
    container_name: "permission-service-infra"
    image: ghcr.io/ing-sistemas/permission-service:latest
    ports:
      - "8080:8080"
    env_file:
        - .env

  #permission-db:
  #  container_name: "permission-db-infra"
  #  image: postgres:12
  #  ports:
  #    - "5432:5432"
  #  env_file:
  #      - .env
  #  environment:
  #    POSTGRES_DB: ${POSTGRES_DB_PERMISSION}
  #    POSTGRES_USER: ${POSTGRES_USER}
  #    POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
  #  volumes:
  #    - pgdata:/var/lib/postgresql/data

  printscript-service:
    container_name: "printscript-service-infra"
    image: ghcr.io/ing-sistemas/printscript-service:latest
    ports:
      - "8082:8082"
    env_file:
        - .env

  ui:
    container_name: "ui-infra"
    image: ghcr.io/ing-sistemas/ui:latest
    ports:
        - "8083:8083"
    env_file:
      - .env

#  nginx:
#    container_name: nginx
#    restart:
#    image: nginx
#    ports:
#      - 80:80
#      - 443:443
#    volumes:
#      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
#      - ./certbot/conf:/etc/letsencrypt
#      - ./certbot/www:/var/www/certbot

  proxy:
    container_name: "reverse-proxy"
    image: nginx
    ports:
      - "80:80"
    volumes:
      - ./static/:/usr/share/nginx/html:ro
      - ./conf.d:/etc/nginx/conf.d:ro


#  certbot:
#    image: certbot/certbot
#    container_name: certbot
#    volumes:
#      - ./certbot/conf:/etc/letsencrypt
#      - ./certbot/www:/var/www/certbot
#    command: certonly --webroot -w /var/www/certbot --force-renewal --email {} -d {print-script} --agree-tos